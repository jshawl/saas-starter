/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, or any plugin's
 * vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any other CSS/SCSS
 * files in this directory. Styles in this file should be added after the last require_* statement.
 * It is generally better to create a new file per style scope.
 *
 *= require_tree .
 *= require_self
 */

:root {
    --primary: rebeccapurple;
    --secondary: lavender;
}

* {
    box-sizing: border-box;
}

html,
body {
    padding: 0;
    margin: 0;
    line-height: 1.5;
}

body {
    font-family: sans-serif;
    color: #333;
}

.public {
    padding: 2rem 0;
}

h1,
h2 {
    font-weight: lighter;
}

h1 {
    font-size: 2.5rem;
    margin-top: 1rem;
}

h2 {
    margin-top: 3rem;
    font-size: 1.35rem;
}

.container {
    max-width: 60rem;
    margin: auto;
}

section,
footer {
    padding: 1em 2rem;
}

nav {
    padding-left: 1rem;
    padding-right: 1rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
    color: var(--primary);
    border-bottom: 1px solid var(--secondary);
}

footer {
    border-top: 1px solid var(--secondary);
    color: #ccc;
    font-size: .8rem;
}

nav ul {
    display: flex;
    list-style: none;
    margin: 0;
    padding: 0;
}

nav a:hover,
nav input:hover {
    cursor: pointer;
    background: var(--primary);
    color: white;
}

nav a,
nav input {
    padding: 1rem;
    color: inherit;
    display: inline-block;
    font: inherit;
    border: none;
    background: none;
    text-decoration: none;
}

/**
 * Elements
 */

.button {
    display: inline-block;
    padding: .5rem 1rem;
    text-decoration: none;
    border: 1px solid var(--primary);
}

.cta {
    background: var(--primary);
    color: white;
}

.cta-light {
    color: var(--primary);
}
